{% extends 'base-security.html.twig' %}

{% block title %}Register{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-12 col-md-8 col-lg-6">
                <h1 class="h3 mb-3 font-weight-normal text-center">Register</h1>
                <form method="post">
                    {{ form_start(registrationForm, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                    <div class="mb-3">
                        {{ form_label(registrationForm.email, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(registrationForm.email, {'attr': {'class': 'form-control'}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(registrationForm.email) }}
                        </div>
                    </div>

                    <div class="mb-3">
                        {{ form_label(registrationForm.plainPassword, 'Password', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(registrationForm.plainPassword, {'attr': {'class': 'form-control', 'id': 'password'}}) }}
                        <div class="invalid-feedback" id="password-error" style="display: {% if form_errors(registrationForm.plainPassword) is not empty %}block{% else %}none{% endif %}">
                            {{ form_errors(registrationForm.plainPassword) }}
                        </div>
                        <ul class="mt-2 text-muted password-rules" id="password-rules" style="font-size: 0.8em; display: {% if form_errors(registrationForm.plainPassword) is not empty %}none{% endif %}">
                            <li id="length-rule">Must be at least 8 characters long</li>
                            <li id="uppercase-rule">Must contain at least one uppercase letter</li>
                            <li id="lowercase-rule">Must contain at least one lowercase letter</li>
                            <li id="digit-rule">Must contain at least one digit</li>
                            <li id="special-rule">Must contain at least one special character</li>
                        </ul>
                    </div>

                    <button type="submit" class="btn btn-lg btn-primary w-100">Register</button>
                    <div class="mt-3 text-center">
                        <a href="{{ path('app_login') }}">Sign in</a>
                    </div>
                    {{ form_end(registrationForm) }}
                </form>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const passwordInput = document.getElementById('password');
            const passwordRules = document.getElementById('password-rules');
            const lengthRule = document.getElementById('length-rule');
            const uppercaseRule = document.getElementById('uppercase-rule');
            const lowercaseRule = document.getElementById('lowercase-rule');
            const digitRule = document.getElementById('digit-rule');
            const specialRule = document.getElementById('special-rule');
            const passwordError = document.getElementById('password-error');
            let isInputFocused = false;

            if(passwordError.style.display === "block"){
                passwordRules.style.display = 'none';
            }

            passwordInput.addEventListener('focus', function () {
                isInputFocused = true;
                if(passwordError.style.display === 'block'){
                    passwordError.style.display = 'none';
                }
                passwordRules.style.display = 'block';
            });

            passwordInput.addEventListener('blur', function () {
                if (!passwordInput.value) {
                    isInputFocused = false;
                    if(!passwordError.style.display || passwordError.style.display === 'none'){
                        passwordRules.style.display = 'none';
                        passwordError.style.display = 'block';
                    }
                }
            });
            passwordInput.addEventListener('input', function () {
                if (isInputFocused) {
                    const password = passwordInput.value;
                    const lengthRegex = /^.{8,}$/;
                    const uppercaseRegex = /[A-Z]/;
                    const lowercaseRegex = /[a-z]/;
                    const digitRegex = /\d/;
                    const specialRegex = /[!@#\$%^&*()_+{}\[\]:;<>,.?~\\/-]/;


                    lengthRule.classList.toggle('valid', lengthRegex.test(password));
                    uppercaseRule.classList.toggle('valid', uppercaseRegex.test(password));
                    lowercaseRule.classList.toggle('valid', lowercaseRegex.test(password));
                    digitRule.classList.toggle('valid', digitRegex.test(password));
                    specialRule.classList.toggle('valid', specialRegex.test(password));
                }
            });
        });
    </script>
{% endblock %}